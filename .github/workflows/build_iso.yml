name: Build ISOs

on:
  workflow_dispatch:
  workflow_call:

env:
  IMAGE_REGISTRY: ghcr.io/BilgisConsole

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-iso
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write


    strategy:
      fail-fast: false
      matrix:
        image_name:
          - bazzite
          - bazzite-nvidia
          - bazzite-nvidia-open
          - bazzite-gnome
          - bazzite-gnome-nvidia
          - bazzite-gnome-nvidia-open
          - bazzite-deck
          - bazzite-deck-gnome
          - bazzite-ally
          - bazzite-ally-gnome
          - bazzite-asus
          - bazzite-gnome-asus
          - bazzite-asus-nvidia
          - bazzite-gnome-asus-nvidia
          - bazzite-asus-nvidia-open
          - bazzite-gnome-asus-nvidia-open
          - bazzite-surface
          - bazzite-gnome-surface
          - bazzite-surface-nvidia-open
          - bazzite-gnome-surface-nvidia-open
          - bazzite-deck-nvidia
          - bazzite-deck-nvidia-gnome
        major_version: [41]

        steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      # ... diÄŸer step'ler ...

      - name: Move ISOs to `isodownload` Directory
        id: upload-directory
        shell: bash
        run: |
          ISO_UPLOAD_DIR=${{ github.workspace }}/isodownload
          mkdir -p ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }} ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}-CHECKSUM ${ISO_UPLOAD_DIR}
          echo "iso-upload-dir=${ISO_UPLOAD_DIR}" >> $GITHUB_OUTPUT

      - name: Install zstd
        run: sudo apt-get update && sudo apt-get install -y zstd

      - name: Compress ISO with zstd
        id: compress-iso
        shell: bash
        run: |
          ISO_FILE="${{ steps.upload-directory.outputs.iso-upload-dir }}/${{ steps.build.outputs.iso_name }}"
          zstd -19 --rm "${ISO_FILE}"
          echo "compressed-iso=${ISO_FILE}.zst" >> $GITHUB_OUTPUT

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Upload Compressed ISO to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ steps.generate-tag.outputs.tag }}
          RELEASE_NAME="${{ matrix.image_name }}-${TAG_NAME}"
          COMPRESSED_ISO="${{ steps.compress-iso.outputs.compressed-iso }}"

          gh release view "$RELEASE_NAME" || gh release create "$RELEASE_NAME" --title "$RELEASE_NAME" --notes "Automated ISO build for $RELEASE_NAME"
          gh release upload "$RELEASE_NAME" "$COMPRESSED_ISO" --clobber
