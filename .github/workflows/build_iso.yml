name: Build ISOs

on:
  workflow_dispatch:
  workflow_call:

env:
  IMAGE_REGISTRY: ghcr.io/ublue-os

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-iso
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        image_name:
          - bazzite
          - bazzite-nvidia
          - bazzite-nvidia-open
          - bazzite-gnome
          - bazzite-gnome-nvidia
          - bazzite-gnome-nvidia-open
          - bazzite-deck
          - bazzite-deck-gnome
          - bazzite-ally
          - bazzite-ally-gnome
          - bazzite-asus
          - bazzite-gnome-asus
          - bazzite-asus-nvidia
          - bazzite-gnome-asus-nvidia
          - bazzite-asus-nvidia-open
          - bazzite-gnome-asus-nvidia-open
          - bazzite-surface
          - bazzite-gnome-surface
          - bazzite-surface-nvidia-open
          - bazzite-gnome-surface-nvidia-open
          - bazzite-deck-nvidia
          - bazzite-deck-nvidia-gnome
        major_version: [41]

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@v1.3.1

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set Image Tag
        id: generate-tag
        shell: bash
        run: |
          TAG="stable"
          if [[ "${{ github.ref_name }}" == "testing" ]]; then
              TAG="testing"
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT

      - name: Set Flatpaks Directory Shortname
        id: generate-flatpak-dir-shortname
        shell: bash
        run: |
          FLATPAK_DIR_SHORTNAME="installer/kde_flatpaks"
          if [[ "${{ matrix.image_name }}" =~ "gnome" ]]; then
            FLATPAK_DIR_SHORTNAME="installer/gnome_flatpaks"
          fi
          echo "flatpak-dir-shortname=${FLATPAK_DIR_SHORTNAME}" >> $GITHUB_OUTPUT

      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bazzite Repo
        id: setup-bazzite-repo
        shell: bash
        run: |
          curl -Lo ${{ github.workspace }}/bazzite.repo https://copr.fedorainfracloud.org/coprs/bazzite-org/bazzite/repo/fedora-${{ matrix.major_version }}/bazzite-org-bazzite-fedora-${{ matrix.major_version }}.repo

      - name: Build ISOs
        uses: jasonn3/build-container-installer@v1.2.4
        id: build
        with:
          arch: x86_64
          image_name: ${{ matrix.image_name }}
          image_repo: ${{ steps.registry_case.outputs.lowercase }}
          variant: 'Kinoite'
          version: ${{ matrix.major_version }}
          image_tag: ${{ steps.generate-tag.outputs.tag }}
          secure_boot_key_url: '${{ github.server_url }}/${{ github.repository }}/raw/main/secure_boot.der'
          enrollment_password: 'universalblue'
          iso_name: ${{ matrix.image_name }}-${{ steps.generate-tag.outputs.tag }}-amd64.iso
          enable_cache_dnf: "false"
          enable_cache_skopeo: "false"
          flatpak_remote_refs_dir: ${{ steps.generate-flatpak-dir-shortname.outputs.flatpak-dir-shortname }}
          enable_flatpak_dependencies: "false"
          extra_boot_params: ""
          additional_templates: '/github/workspace/installer/lorax_templates/remove_root_password_prompt.tmpl /github/workspace/installer/lorax_templates/set_default_user.tmpl'
          repos: '/github/workspace/bazzite.repo /etc/yum.repos.d/fedora.repo /etc/yum.repos.d/fedora-updates.repo'

      - name: Move ISOs to `isodownload` Directory
        id: upload-directory
        shell: bash
        run: |
          ISO_UPLOAD_DIR=${{ github.workspace }}/isodownload
          mkdir -p ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }} ${ISO_UPLOAD_DIR}
          mv ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}-CHECKSUM ${ISO_UPLOAD_DIR}
          echo "iso-upload-dir=${ISO_UPLOAD_DIR}" >> $GITHUB_OUTPUT

      - name: Upload ISOs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.generate-tag.outputs.tag }}
          name: "BilgişConsole ISO - ${{ steps.generate-tag.outputs.tag }}"
          body: |
            Otomatik olarak oluşturulmuş ISO dosyaları:
            - ${{ matrix.image_name }}-${{ steps.generate-tag.outputs.tag }}-amd64.iso
            - CHECKSUM dosyası

          files: |
            ${{ steps.upload-directory.outputs.iso-upload-dir }}/*.iso
            ${{ steps.upload-directory.outputs.iso-upload-dir }}/*CHECKSUM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
